{"ast":null,"code":"var _jsxFileName = \"/home/ahmet/Masa\\xFCst\\xFC/kodluyoruz/kodluyoruzilkrepo/React/todoApp/src/App.js\";\nimport React, { Component } from \"react\";\nimport TodoList from \"./components/TodoList/TodoList\";\nimport \"./App.css\";\nimport Form from \"./components/Form/Form\";\nimport Header from \"./components/TodoHeader/TodoHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addItem = () => {\n      // input'ta yazılı olan string değer\n      const currentValue = this.state.userInput;\n\n      if (this.state.userInput !== \"\") {\n        const userInput = {\n          // Delete yaparken kullanılabilmesi için bir her item için random bir id\n          id: Math.random(),\n          content: currentValue\n        };\n        this.setState({\n          // Var olan array'i korumak için spread operatör kullanılıyor\n          // spread operatör ile şu anki \"todos\" array elemanlarını alıyoruz ve yenisini ekliyoruz\n          todos: [...this.state.todos, userInput]\n        }, () => {\n          // Input'tan alınan değer state'e eklendikten sonra input'u temizliyoruz\n          this.setState({\n            userInput: \"\"\n          });\n        });\n      }\n    };\n\n    this.onInputChange = e => {\n      const newVal = e.target.value;\n      this.setState({\n        userInput: newVal\n      });\n    };\n\n    this.state = {\n      userInput: \"\",\n      todos: []\n    };\n  } // Eğer input alanı boş değilse todos'a ekleye\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        userInput: this.state.userInput,\n        onInputChange: this.onInputChange,\n        addItem: this.addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), this.state.todos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          todos: this.state.todos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ahmet/Masaüstü/kodluyoruz/kodluyoruzilkrepo/React/todoApp/src/App.js"],"names":["React","Component","TodoList","Form","Header","App","constructor","props","addItem","currentValue","state","userInput","id","Math","random","content","setState","todos","onInputChange","e","newVal","target","value","render","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,OATmB,GAST,MAAM;AACd;AACA,YAAMC,YAAY,GAAG,KAAKC,KAAL,CAAWC,SAAhC;;AAEA,UAAI,KAAKD,KAAL,CAAWC,SAAX,KAAyB,EAA7B,EAAiC;AAC/B,cAAMA,SAAS,GAAG;AAChB;AACAC,UAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EAFY;AAGhBC,UAAAA,OAAO,EAAEN;AAHO,SAAlB;AAMA,aAAKO,QAAL,CACE;AACE;AACA;AACAC,UAAAA,KAAK,EAAE,CAAC,GAAG,KAAKP,KAAL,CAAWO,KAAf,EAAsBN,SAAtB;AAHT,SADF,EAME,MAAM;AACJ;AACA,eAAKK,QAAL,CAAc;AACZL,YAAAA,SAAS,EAAE;AADC,WAAd;AAGD,SAXH;AAaD;AACF,KAlCkB;;AAAA,SAoCnBO,aApCmB,GAoCFC,CAAD,IAAO;AACrB,YAAMC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAxB;AACA,WAAKN,QAAL,CAAc;AACZL,QAAAA,SAAS,EAAES;AADC,OAAd;AAGD,KAzCkB;;AAEjB,SAAKV,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXM,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID,GAPyB,CAS1B;;;AAqCAM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AACE,QAAA,SAAS,EAAE,KAAKb,KAAL,CAAWC,SADxB;AAEE,QAAA,aAAa,EAAE,KAAKO,aAFtB;AAGE,QAAA,OAAO,EAAE,KAAKV;AAHhB;AAAA;AAAA;AAAA;AAAA,cAFF,EAOG,KAAKE,KAAL,CAAWO,KAAX,CAAiBO,MAAjB,GAA0B,CAA1B,iBACC;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE,KAAKd,KAAL,CAAWO;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA9DyB;;AAiE5B,eAAeZ,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport TodoList from \"./components/TodoList/TodoList\";\nimport \"./App.css\";\nimport Form from \"./components/Form/Form\";\nimport Header from \"./components/TodoHeader/TodoHeader\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInput: \"\",\n      todos: [],\n    };\n  }\n\n  // Eğer input alanı boş değilse todos'a ekleye\n  addItem = () => {\n    // input'ta yazılı olan string değer\n    const currentValue = this.state.userInput;\n\n    if (this.state.userInput !== \"\") {\n      const userInput = {\n        // Delete yaparken kullanılabilmesi için bir her item için random bir id\n        id: Math.random(),\n        content: currentValue,\n      };\n\n      this.setState(\n        {\n          // Var olan array'i korumak için spread operatör kullanılıyor\n          // spread operatör ile şu anki \"todos\" array elemanlarını alıyoruz ve yenisini ekliyoruz\n          todos: [...this.state.todos, userInput],\n        },\n        () => {\n          // Input'tan alınan değer state'e eklendikten sonra input'u temizliyoruz\n          this.setState({\n            userInput: \"\",\n          });\n        }\n      );\n    }\n  };\n\n  onInputChange = (e) => {\n    const newVal = e.target.value;\n    this.setState({\n      userInput: newVal,\n    });\n  };\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Form\n          userInput={this.state.userInput}\n          onInputChange={this.onInputChange}\n          addItem={this.addItem}\n        />\n        {this.state.todos.length > 0 && (\n          <div className=\"list\">\n            <TodoList todos={this.state.todos}  />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}